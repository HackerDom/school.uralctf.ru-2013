#!/bin/sh
#
# chkconfig: 345 80 20
# description: run fetchmail service
#
PIDFILE=/var/run/webC.pid
HOMEDIR=/home/C/
DAEMON=main.pl
NAME=webC
if [ ! -x ${HOMEDIR}${SCRIPT} ]; then
    exit 1
fi

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions


RETVAL=0

do_start () {
    status_of_proc $DAEMON $NAME -p $PIDFILE > /dev/null && return 2 \
    || start-stop-daemon --start --quiet -b -m --pidfile $PIDFILE -d ${HOMEDIR} --exec ${HOMEDIR}$DAEMON > /dev/null || return 2
}

do_stop () {
    start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE
    RETVAL="$?"
    [ "$RETVAL" = 2 ] && return 2
    # Wait for children to finish too if this is a daemon that forks
    # and if the daemon is only ever run from this initscript.
    # If the above conditions are not satisfied then add some other code
    # that waits for the process to drop all resources that could be
    # needed by services started subsequently.  A last resort is to
    # sleep for some time.
    start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 -d ${HOMEDIR} --exec $DAEMON
    [ "$?" = 2 ] && return 2
    # Many daemons don't delete their pidfiles when they exit.
    rm -f $PIDFILE
    return "$RETVAL"

}

case $1 in
    start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
            0) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            *) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
    ;;
    stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
    ;;
    restart)
    #
    log_daemon_msg "Restarting $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1)
        do_start
        case "$?" in
            0) log_end_msg 0 ;;
            1) log_end_msg 1 ;; # Old process is still running
            *) log_end_msg 1 ;; # Failed to start
        esac
        ;;
      *)
        # Failed to stop
        log_end_msg 1
        ;;
    esac
    ;;
    status)
    status_of_proc $DAEMON $NAME -p $PIDFILE && exit 0 || exit $?
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    ;;
esac

RETVAL=$?

exit $RETVAL
